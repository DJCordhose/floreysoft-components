{"version":3,"file":"FirebaseLogin.js","sourceRoot":"","sources":["FirebaseLogin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as firebase from 'firebase/app';\nimport * as firebaseui from 'firebaseui'\nimport 'firebase/auth';\nimport { LitElement, customElement, html, query, TemplateResult } from 'lit-element';\nimport { Dialog } from '@floreysoft/dialog';\n\nexport interface AccountMerger {\n    mergeAccounts(anonymousUser: firebase.User, authenticatedUser: firebase.User): Promise<void>\n}\n\n@customElement(\"fs-firebase-login\")\nexport class FirebaseLogin extends LitElement {\n    user: firebase.User\n    accountMerger: AccountMerger\n\n    @query(\"fs-dialog\")\n    private loginDialog: Dialog\n\n    @query(\"#firebase-container\")\n    private firebaseContainer : HTMLElement\n\n    private ui: firebaseui.auth.AuthUI\n    private options: Object\n\n    constructor() {\n        super()\n        this.options = {\n            autoUpgradeAnonymousUsers: true,\n            signInFlow: 'popup',\n            signInSuccessUrl: window.location.href,\n            signInOptions: [\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n                firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n                firebase.auth.GithubAuthProvider.PROVIDER_ID,\n                firebase.auth.EmailAuthProvider.PROVIDER_ID\n                /*\n                firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n                */\n            ],\n            callbacks: {\n                signInFailure: async (error) => {\n                    if (error.code == 'firebaseui/anonymous-upgrade-merge-conflict') {\n                        try {\n                            let anonymousUser = firebase.auth().currentUser;\n                            let user = await firebase.auth().signInAndRetrieveDataWithCredential(error.credential);\n                            if (anonymousUser != null && user && user.user) {\n                                this.accountMerger.mergeAccounts(anonymousUser, user.user)\n                            }\n                        } catch (error) {\n                            console.error(error)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    createRenderRoot() {\n        return this\n    }\n\n    render() {\n        let template : TemplateResult\n        if (this.user && !this.user.isAnonymous) {\n            let displayName = this.user.displayName\n            let photoURL = this.user.photoURL\n            if (!displayName) {\n                let info = this.user.providerData[0];\n                if (info) {\n                    displayName = info.displayName;\n                    photoURL = info.photoURL\n                }\n            }\n            template = html`${displayName}<img class=\"photo\" src=\"${photoURL}\"/><vaadin-button @click=${this.logout} theme=\"primary\">Logout</vaadin-button>`\n        } else {\n            template = html`<span>Sign in to save your work -></span> <vaadin-button @click=${this.login} theme=\"primary\">Login</vaadin-button>`\n        }\n        return html`${template}<fs-dialog header=\"Login\" buttons='[{ \"label\" : \"Close\", \"id\" : \"close\" }]'><div id=\"firebase-container\"></div></fs-dialog>`\n    }\n\n    firstUpdated() {\n        this.ui = new firebaseui.auth.AuthUI(firebase.auth());\n        firebase.auth().onAuthStateChanged(async (user: firebase.User) => {\n            this.loginDialog.open = false\n            this.user = user\n            if (!this.user) {\n                await firebase.auth().signInAnonymously()\n            } else {\n                this.dispatchEvent(new CustomEvent('authStateChanged', { detail: user }))\n            }\n            this.requestUpdate()\n        })\n    }\n\n    login() {\n        this.ui.reset()\n        this.ui.start(this.firebaseContainer, this.options)\n        this.loginDialog.open = true\n    }\n\n    logout() {\n        firebase.auth().signOut()\n    }\n}"]}